// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


function fromInt(n) {
  switch (n) {
    case 1 :
        return "ConnectRequest";
    case 2 :
        return "Disconnect";
    case 3 :
        return "PlayerSlotSet";
    case 4 :
        return "PlayerInfo";
    case 5 :
        return "PlayerInventorySlot";
    case 6 :
        return "WorldDataRequest";
    case 7 :
        return "WorldInfo";
    case 8 :
        return "InitialTileSectionsRequest";
    case 9 :
        return "Status";
    case 10 :
        return "TileSectionSend";
    case 11 :
        return "TileSectionFrame";
    case 12 :
        return "PlayerSpawn";
    case 13 :
        return "PlayerUpdate";
    case 14 :
        return "PlayerActive";
    case 16 :
        return "PlayerHealth";
    case 17 :
        return "TileModify";
    case 18 :
        return "TimeSet";
    case 19 :
        return "DoorUse";
    case 20 :
        return "TileSquareSend";
    case 21 :
        return "ItemDropUpdate";
    case 22 :
        return "ItemOwner";
    case 23 :
        return "NpcUpdate";
    case 24 :
        return "NpcItemStrike";
    case 27 :
        return "ProjectileSync";
    case 28 :
        return "NpcStrike";
    case 29 :
        return "ProjectileDestroy";
    case 30 :
        return "PvpToggle";
    case 31 :
        return "ChestOpen";
    case 32 :
        return "ChestItem";
    case 33 :
        return "ActiveContainerSync";
    case 34 :
        return "ChestPlace";
    case 35 :
        return "HealEffect";
    case 36 :
        return "Zones";
    case 37 :
        return "PasswordRequired";
    case 38 :
        return "PasswordSend";
    case 39 :
        return "ItemOwnerRemove";
    case 40 :
        return "NpcTalk";
    case 41 :
        return "PlayerAnimation";
    case 42 :
        return "PlayerMana";
    case 43 :
        return "ManaEffect";
    case 45 :
        return "PlayerTeam";
    case 46 :
        return "SignRead";
    case 47 :
        return "SignNew";
    case 48 :
        return "LiquidSet";
    case 49 :
        return "PlayerSpawnSelf";
    case 50 :
        return "PlayerBuffsSet";
    case 51 :
        return "NpcSpecialEffect";
    case 52 :
        return "ChestOrTempleUnlock";
    case 53 :
        return "NpcBuffAdd";
    case 54 :
        return "NpcBuffUpdate";
    case 55 :
        return "PlayerBuffAdd";
    case 56 :
        return "NpcNameUpdate";
    case 57 :
        return "GoodEvilUpdate";
    case 58 :
        return "HarpPlay";
    case 59 :
        return "SwitchHit";
    case 60 :
        return "NpcHomeUpdate";
    case 61 :
        return "BossOrInvasionSpawn";
    case 62 :
        return "PlayerDodge";
    case 63 :
        return "TilePaint";
    case 64 :
        return "WallPaint";
    case 65 :
        return "Teleport";
    case 66 :
        return "PlayerHealOther";
    case 67 :
        return "DimensionsUpdate";
    case 68 :
        return "ClientUuid";
    case 69 :
        return "ChestName";
    case 70 :
        return "NpcCatch";
    case 71 :
        return "NpcRelease";
    case 72 :
        return "TravellingMerchantInventory";
    case 73 :
        return "TeleportationPotion";
    case 74 :
        return "AnglerQuest";
    case 75 :
        return "AnglerQuestComplete";
    case 76 :
        return "AnglerQuestsCompletedAmount";
    case 77 :
        return "TemporaryAnimationCreate";
    case 78 :
        return "InvasionProgressReport";
    case 79 :
        return "ObjectPlace";
    case 80 :
        return "PlayerChestIndexSync";
    case 81 :
        return "CombatNumberCreate";
    case 82 :
        return "NetModuleLoad";
    case 83 :
        return "NpcKillCount";
    case 84 :
        return "PlayerStealth";
    case 85 :
        return "ItemForceIntoNearestChest";
    case 86 :
        return "TileEntityUpdate";
    case 87 :
        return "TileEntityPlace";
    case 88 :
        return "ItemDropModify";
    case 89 :
        return "ItemFramePlace";
    case 90 :
        return "ItemDropInstancedUpdate";
    case 91 :
        return "EmoteBubble";
    case 92 :
        return "ExtraValueSync";
    case 93 :
        return "SocialHandshake";
    case 94 :
        return "Unused";
    case 95 :
        return "PortalKill";
    case 96 :
        return "PlayerTeleportPortal";
    case 97 :
        return "NpcKilledNotification";
    case 98 :
        return "EventNotification";
    case 99 :
        return "MinionTargetUpdate";
    case 100 :
        return "NpcTeleportPortal";
    case 101 :
        return "ShieldStrengthsUpdate";
    case 102 :
        return "NebulaLevelUp";
    case 103 :
        return "MoonLordCountdown";
    case 104 :
        return "NpcShopItem";
    case 105 :
        return "GemLockToggle";
    case 106 :
        return "SmokePoof";
    case 107 :
        return "ChatMessageSmart";
    case 108 :
        return "WiredCannonShot";
    case 109 :
        return "MassWireOperation";
    case 110 :
        return "MassWireOperationPay";
    case 111 :
        return "PartyToggle";
    case 112 :
        return "TreeGrowFx";
    case 113 :
        return "CrystalInvasionStart";
    case 114 :
        return "CrystalInvasionWipeAll";
    case 115 :
        return "MinionAttackTargetUpdate";
    case 116 :
        return "CrystalInvasionSendWaitTime";
    case 117 :
        return "PlayerDamage";
    case 118 :
        return "PlayerDeath";
    case 119 :
        return "CombatTextCreate";
    case 120 :
        return "Emoji";
    case 121 :
        return "TileEntityDisplayDollItemSync";
    case 122 :
        return "TileEntityInteractionRequest";
    case 123 :
        return "WeaponsRackTryPlacing";
    case 124 :
        return "TileEntityHatRackItemSync";
    case 125 :
        return "TilePickingSync";
    case 126 :
        return "RevengeMarkerSync";
    case 127 :
        return "RevengeMarkerRemove";
    case 128 :
        return "GolfBallLandInCup";
    case 129 :
        return "ClientFinishConnectingToServer";
    case 130 :
        return "NpcFishOut";
    case 131 :
        return "NpcTamper";
    case 132 :
        return "LegacySoundPlay";
    case 133 :
        return "FoodPlatterTryPlacing";
    case 134 :
        return "PlayerLuckFactorsUpdate";
    case 135 :
        return "PlayerDead";
    case 136 :
        return "CavernMonsterTypeSync";
    case 137 :
        return "NpcBuffRemovalRequest";
    case 138 :
        return "ClientSyncedInventory";
    case 139 :
        return "CountsAsHostForGameplaySet";
    case 140 :
        return "CreditsOrSlimeTransform";
    case 141 :
        return "LucyAxeMessage";
    case 142 :
        return "PiggyBankVoidLensUpdate";
    case 143 :
        return "DungeonDefendersEventAttemptSkipWait";
    case 144 :
        return "HaveDryadDoStardewAnimation";
    case 145 :
        return "ItemDropShimmeredUpdate";
    case 146 :
        return "ShimmerEffectOrCoinLuck";
    case 147 :
        return "LoadoutSwitch";
    case 148 :
        return "ItemDropProtectedUpdate";
    default:
      return ;
  }
}

function toInt(self) {
  switch (self) {
    case "ConnectRequest" :
        return 1;
    case "Disconnect" :
        return 2;
    case "PlayerSlotSet" :
        return 3;
    case "PlayerInfo" :
        return 4;
    case "PlayerInventorySlot" :
        return 5;
    case "WorldDataRequest" :
        return 6;
    case "WorldInfo" :
        return 7;
    case "InitialTileSectionsRequest" :
        return 8;
    case "Status" :
        return 9;
    case "TileSectionSend" :
        return 10;
    case "TileSectionFrame" :
        return 11;
    case "PlayerSpawn" :
        return 12;
    case "PlayerUpdate" :
        return 13;
    case "PlayerActive" :
        return 14;
    case "PlayerHealth" :
        return 16;
    case "TileModify" :
        return 17;
    case "TimeSet" :
        return 18;
    case "DoorUse" :
        return 19;
    case "TileSquareSend" :
        return 20;
    case "ItemDropUpdate" :
        return 21;
    case "ItemOwner" :
        return 22;
    case "NpcUpdate" :
        return 23;
    case "NpcItemStrike" :
        return 24;
    case "ProjectileSync" :
        return 27;
    case "NpcStrike" :
        return 28;
    case "ProjectileDestroy" :
        return 29;
    case "PvpToggle" :
        return 30;
    case "ChestOpen" :
        return 31;
    case "ChestItem" :
        return 32;
    case "ActiveContainerSync" :
        return 33;
    case "ChestPlace" :
        return 34;
    case "HealEffect" :
        return 35;
    case "Zones" :
        return 36;
    case "PasswordRequired" :
        return 37;
    case "PasswordSend" :
        return 38;
    case "ItemOwnerRemove" :
        return 39;
    case "NpcTalk" :
        return 40;
    case "PlayerAnimation" :
        return 41;
    case "PlayerMana" :
        return 42;
    case "ManaEffect" :
        return 43;
    case "PlayerTeam" :
        return 45;
    case "SignRead" :
        return 46;
    case "SignNew" :
        return 47;
    case "LiquidSet" :
        return 48;
    case "PlayerSpawnSelf" :
        return 49;
    case "PlayerBuffsSet" :
        return 50;
    case "NpcSpecialEffect" :
        return 51;
    case "ChestOrTempleUnlock" :
        return 52;
    case "NpcBuffAdd" :
        return 53;
    case "NpcBuffUpdate" :
        return 54;
    case "PlayerBuffAdd" :
        return 55;
    case "NpcNameUpdate" :
        return 56;
    case "GoodEvilUpdate" :
        return 57;
    case "HarpPlay" :
        return 58;
    case "SwitchHit" :
        return 59;
    case "NpcHomeUpdate" :
        return 60;
    case "BossOrInvasionSpawn" :
        return 61;
    case "PlayerDodge" :
        return 62;
    case "TilePaint" :
        return 63;
    case "WallPaint" :
        return 64;
    case "Teleport" :
        return 65;
    case "PlayerHealOther" :
        return 66;
    case "DimensionsUpdate" :
        return 67;
    case "ClientUuid" :
        return 68;
    case "ChestName" :
        return 69;
    case "NpcCatch" :
        return 70;
    case "NpcRelease" :
        return 71;
    case "TravellingMerchantInventory" :
        return 72;
    case "TeleportationPotion" :
        return 73;
    case "AnglerQuest" :
        return 74;
    case "AnglerQuestComplete" :
        return 75;
    case "AnglerQuestsCompletedAmount" :
        return 76;
    case "TemporaryAnimationCreate" :
        return 77;
    case "InvasionProgressReport" :
        return 78;
    case "ObjectPlace" :
        return 79;
    case "PlayerChestIndexSync" :
        return 80;
    case "CombatNumberCreate" :
        return 81;
    case "NetModuleLoad" :
        return 82;
    case "NpcKillCount" :
        return 83;
    case "PlayerStealth" :
        return 84;
    case "ItemForceIntoNearestChest" :
        return 85;
    case "TileEntityUpdate" :
        return 86;
    case "TileEntityPlace" :
        return 87;
    case "ItemDropModify" :
        return 88;
    case "ItemFramePlace" :
        return 89;
    case "ItemDropInstancedUpdate" :
        return 90;
    case "EmoteBubble" :
        return 91;
    case "ExtraValueSync" :
        return 92;
    case "SocialHandshake" :
        return 93;
    case "Unused" :
        return 94;
    case "PortalKill" :
        return 95;
    case "PlayerTeleportPortal" :
        return 96;
    case "NpcKilledNotification" :
        return 97;
    case "EventNotification" :
        return 98;
    case "MinionTargetUpdate" :
        return 99;
    case "NpcTeleportPortal" :
        return 100;
    case "ShieldStrengthsUpdate" :
        return 101;
    case "NebulaLevelUp" :
        return 102;
    case "MoonLordCountdown" :
        return 103;
    case "NpcShopItem" :
        return 104;
    case "GemLockToggle" :
        return 105;
    case "SmokePoof" :
        return 106;
    case "ChatMessageSmart" :
        return 107;
    case "WiredCannonShot" :
        return 108;
    case "MassWireOperation" :
        return 109;
    case "MassWireOperationPay" :
        return 110;
    case "PartyToggle" :
        return 111;
    case "TreeGrowFx" :
        return 112;
    case "CrystalInvasionStart" :
        return 113;
    case "CrystalInvasionWipeAll" :
        return 114;
    case "MinionAttackTargetUpdate" :
        return 115;
    case "CrystalInvasionSendWaitTime" :
        return 116;
    case "PlayerDamage" :
        return 117;
    case "PlayerDeath" :
        return 118;
    case "CombatTextCreate" :
        return 119;
    case "Emoji" :
        return 120;
    case "TileEntityDisplayDollItemSync" :
        return 121;
    case "TileEntityInteractionRequest" :
        return 122;
    case "WeaponsRackTryPlacing" :
        return 123;
    case "TileEntityHatRackItemSync" :
        return 124;
    case "TilePickingSync" :
        return 125;
    case "RevengeMarkerSync" :
        return 126;
    case "RevengeMarkerRemove" :
        return 127;
    case "GolfBallLandInCup" :
        return 128;
    case "ClientFinishConnectingToServer" :
        return 129;
    case "NpcFishOut" :
        return 130;
    case "NpcTamper" :
        return 131;
    case "LegacySoundPlay" :
        return 132;
    case "FoodPlatterTryPlacing" :
        return 133;
    case "PlayerLuckFactorsUpdate" :
        return 134;
    case "PlayerDead" :
        return 135;
    case "CavernMonsterTypeSync" :
        return 136;
    case "NpcBuffRemovalRequest" :
        return 137;
    case "ClientSyncedInventory" :
        return 138;
    case "CountsAsHostForGameplaySet" :
        return 139;
    case "CreditsOrSlimeTransform" :
        return 140;
    case "LucyAxeMessage" :
        return 141;
    case "PiggyBankVoidLensUpdate" :
        return 142;
    case "DungeonDefendersEventAttemptSkipWait" :
        return 143;
    case "HaveDryadDoStardewAnimation" :
        return 144;
    case "ItemDropShimmeredUpdate" :
        return 145;
    case "ShimmerEffectOrCoinLuck" :
        return 146;
    case "LoadoutSwitch" :
        return 147;
    case "ItemDropProtectedUpdate" :
        return 148;
    
  }
}

exports.fromInt = fromInt;
exports.toInt = toInt;
/* No side effect */
