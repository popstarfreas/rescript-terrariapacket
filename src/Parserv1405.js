// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Option = require("rescript/lib/js/belt_Option.js");
var PacketType$TerrariaPacket = require("./PacketType.js");
var Packetv1405$TerrariaPacket = require("./Packetv1405.js");
var Packet_Emoji$TerrariaPacket = require("./packet/Packet_Emoji.js");
var Packet_Zones$TerrariaPacket = require("./packet/Packet_Zones.js");
var Packet_Status$TerrariaPacket = require("./packet/Packet_Status.js");
var Packet_Unused$TerrariaPacket = require("./packet/Packet_Unused.js");
var Packet_DoorUse$TerrariaPacket = require("./packet/Packet_DoorUse.js");
var Packet_NpcTalk$TerrariaPacket = require("./packet/Packet_NpcTalk.js");
var Packet_SignNew$TerrariaPacket = require("./packet/Packet_SignNew.js");
var Packet_TimeSet$TerrariaPacket = require("./packet/Packet_TimeSet.js");
var Packet_CatchNpc$TerrariaPacket = require("./packet/Packet_CatchNpc.js");
var Packet_HarpPlay$TerrariaPacket = require("./packet/Packet_HarpPlay.js");
var Packet_SignRead$TerrariaPacket = require("./packet/Packet_SignRead.js");
var Packet_Teleport$TerrariaPacket = require("./packet/Packet_Teleport.js");
var Packet_ChestItem$TerrariaPacket = require("./packet/Packet_ChestItem.js");
var Packet_ChestName$TerrariaPacket = require("./packet/Packet_ChestName.js");
var Packet_ChestOpen$TerrariaPacket = require("./packet/Packet_ChestOpen.js");
var Packet_ItemOwner$TerrariaPacket = require("./packet/Packet_ItemOwner.js");
var Packet_LiquidSet$TerrariaPacket = require("./packet/Packet_LiquidSet.js");
var Packet_NpcStrike$TerrariaPacket = require("./packet/Packet_NpcStrike.js");
var Packet_NpcTamper$TerrariaPacket = require("./packet/Packet_NpcTamper.js");
var Packet_NpcUpdate$TerrariaPacket = require("./packet/Packet_NpcUpdate.js");
var Packet_PaintTile$TerrariaPacket = require("./packet/Packet_PaintTile.js");
var Packet_PaintWall$TerrariaPacket = require("./packet/Packet_PaintWall.js");
var Packet_PvpToggle$TerrariaPacket = require("./packet/Packet_PvpToggle.js");
var Packet_SmokePoof$TerrariaPacket = require("./packet/Packet_SmokePoof.js");
var Packet_SwitchHit$TerrariaPacket = require("./packet/Packet_SwitchHit.js");
var Packet_ChestPlace$TerrariaPacket = require("./packet/Packet_ChestPlace.js");
var Packet_ClientUuid$TerrariaPacket = require("./packet/Packet_ClientUuid.js");
var Packet_Disconnect$TerrariaPacket = require("./packet/Packet_Disconnect.js");
var Packet_HealEffect$TerrariaPacket = require("./packet/Packet_HealEffect.js");
var Packet_ManaEffect$TerrariaPacket = require("./packet/Packet_ManaEffect.js");
var Packet_NpcBuffAdd$TerrariaPacket = require("./packet/Packet_NpcBuffAdd.js");
var Packet_NpcFishOut$TerrariaPacket = require("./packet/Packet_NpcFishOut.js");
var Packet_PlayerDead$TerrariaPacket = require("./packet/Packet_PlayerDead.js");
var Packet_PlayerInfo$TerrariaPacket = require("./packet/Packet_PlayerInfo.js");
var Packet_PlayerMana$TerrariaPacket = require("./packet/Packet_PlayerMana.js");
var Packet_PlayerTeam$TerrariaPacket = require("./packet/Packet_PlayerTeam.js");
var Packet_PortalKill$TerrariaPacket = require("./packet/Packet_PortalKill.js");
var Packet_ReleaseNpc$TerrariaPacket = require("./packet/Packet_ReleaseNpc.js");
var Packet_TileModify$TerrariaPacket = require("./packet/Packet_TileModify.js");
var Packet_TreeGrowFx$TerrariaPacket = require("./packet/Packet_TreeGrowFx.js");
var Packet_AnglerQuest$TerrariaPacket = require("./packet/Packet_AnglerQuest.js");
var Packet_ChestUnlock$TerrariaPacket = require("./packet/Packet_ChestUnlock.js");
var Packet_EmoteBubble$TerrariaPacket = require("./packet/Packet_EmoteBubble.js");
var Packet_NpcShopItem$TerrariaPacket = require("./packet/Packet_NpcShopItem.js");
var Packet_ObjectPlace$TerrariaPacket = require("./packet/Packet_ObjectPlace.js");
var Packet_PartyToggle$TerrariaPacket = require("./packet/Packet_PartyToggle.js");
var Packet_PlayerDeath$TerrariaPacket = require("./packet/Packet_PlayerDeath.js");
var Packet_PlayerDodge$TerrariaPacket = require("./packet/Packet_PlayerDodge.js");
var Packet_PlayerSpawn$TerrariaPacket = require("./packet/Packet_PlayerSpawn.js");
var Packet_NpcKillCount$TerrariaPacket = require("./packet/Packet_NpcKillCount.js");
var Packet_PasswordSend$TerrariaPacket = require("./packet/Packet_PasswordSend.js");
var Packet_PlayerActive$TerrariaPacket = require("./packet/Packet_PlayerActive.js");
var Packet_PlayerDamage$TerrariaPacket = require("./packet/Packet_PlayerDamage.js");
var Packet_PlayerHealth$TerrariaPacket = require("./packet/Packet_PlayerHealth.js");
var Packet_PlayerUpdate$TerrariaPacket = require("./packet/Packet_PlayerUpdate.js");
var Packet_GemLockToggle$TerrariaPacket = require("./packet/Packet_GemLockToggle.js");
var Packet_NebulaLevelUp$TerrariaPacket = require("./packet/Packet_NebulaLevelUp.js");
var Packet_NetModuleLoad$TerrariaPacket = require("./packet/Packet_NetModuleLoad.js");
var Packet_NpcBuffUpdate$TerrariaPacket = require("./packet/Packet_NpcBuffUpdate.js");
var Packet_NpcHomeUpdate$TerrariaPacket = require("./packet/Packet_NpcHomeUpdate.js");
var Packet_NpcItemStrike$TerrariaPacket = require("./packet/Packet_NpcItemStrike.js");
var Packet_NpcNameUpdate$TerrariaPacket = require("./packet/Packet_NpcNameUpdate.js");
var Packet_PlayerBuffAdd$TerrariaPacket = require("./packet/Packet_PlayerBuffAdd.js");
var Packet_PlayerSlotSet$TerrariaPacket = require("./packet/Packet_PlayerSlotSet.js");
var Packet_PlayerStealth$TerrariaPacket = require("./packet/Packet_PlayerStealth.js");
var Packet_ExtraValueSync$TerrariaPacket = require("./packet/Packet_ExtraValueSync.js");
var Packet_GoodEvilUpdate$TerrariaPacket = require("./packet/Packet_GoodEvilUpdate.js");
var Packet_ItemDropModify$TerrariaPacket = require("./packet/Packet_ItemDropModify.js");
var Packet_ItemDropUpdate$TerrariaPacket = require("./packet/Packet_ItemDropUpdate.js");
var Packet_ItemFramePlace$TerrariaPacket = require("./packet/Packet_ItemFramePlace.js");
var Packet_PlayerBuffsSet$TerrariaPacket = require("./packet/Packet_PlayerBuffsSet.js");
var Packetv1405_WorldInfo$TerrariaPacket = require("./packet/v1405/Packetv1405_WorldInfo.js");
var Packet_ItemOwnerRemove$TerrariaPacket = require("./packet/Packet_ItemOwnerRemove.js");
var Packet_LegacySoundPlay$TerrariaPacket = require("./packet/Packet_LegacySoundPlay.js");
var Packet_PlayerAnimation$TerrariaPacket = require("./packet/Packet_PlayerAnimation.js");
var Packet_PlayerHealOther$TerrariaPacket = require("./packet/Packet_PlayerHealOther.js");
var Packet_PlayerSpawnSelf$TerrariaPacket = require("./packet/Packet_PlayerSpawnSelf.js");
var Packet_SocialHandshake$TerrariaPacket = require("./packet/Packet_SocialHandshake.js");
var Packet_TileEntityPlace$TerrariaPacket = require("./packet/Packet_TileEntityPlace.js");
var Packet_TilePickingSync$TerrariaPacket = require("./packet/Packet_TilePickingSync.js");
var Packet_TileSectionSend$TerrariaPacket = require("./packet/Packet_TileSectionSend.js");
var Packet_WiredCannonShot$TerrariaPacket = require("./packet/Packet_WiredCannonShot.js");
var Packet_ChatMessageSmart$TerrariaPacket = require("./packet/Packet_ChatMessageSmart.js");
var Packet_CombatTextCreate$TerrariaPacket = require("./packet/Packet_CombatTextCreate.js");
var Packet_DimensionsUpdate$TerrariaPacket = require("./packet/Packet_DimensionsUpdate.js");
var Packet_NpcSpecialEffect$TerrariaPacket = require("./packet/Packet_NpcSpecialEffect.js");
var Packet_PasswordRequired$TerrariaPacket = require("./packet/Packet_PasswordRequired.js");
var Packet_TileEntityUpdate$TerrariaPacket = require("./packet/Packet_TileEntityUpdate.js");
var Packet_TileSectionFrame$TerrariaPacket = require("./packet/Packet_TileSectionFrame.js");
var Packet_WorldDataRequest$TerrariaPacket = require("./packet/Packet_WorldDataRequest.js");
var Packet_EventNotification$TerrariaPacket = require("./packet/Packet_EventNotification.js");
var Packet_GolfBallLandInCup$TerrariaPacket = require("./packet/Packet_GolfBallLandInCup.js");
var Packet_MassWireOperation$TerrariaPacket = require("./packet/Packet_MassWireOperation.js");
var Packet_MoonLordCountdown$TerrariaPacket = require("./packet/Packet_MoonLordCountdown.js");
var Packet_NpcTeleportPortal$TerrariaPacket = require("./packet/Packet_NpcTeleportPortal.js");
var Packet_ProjectileDestroy$TerrariaPacket = require("./packet/Packet_ProjectileDestroy.js");
var Packet_RevengeMarkerSync$TerrariaPacket = require("./packet/Packet_RevengeMarkerSync.js");
var Packet_CombatNumberCreate$TerrariaPacket = require("./packet/Packet_CombatNumberCreate.js");
var Packet_MinionTargetUpdate$TerrariaPacket = require("./packet/Packet_MinionTargetUpdate.js");
var Packet_ActiveContainerSync$TerrariaPacket = require("./packet/Packet_ActiveContainerSync.js");
var Packet_AnglerQuestComplete$TerrariaPacket = require("./packet/Packet_AnglerQuestComplete.js");
var Packet_BossOrInvasionSpawn$TerrariaPacket = require("./packet/Packet_BossOrInvasionSpawn.js");
var Packet_PlayerInventorySlot$TerrariaPacket = require("./packet/Packet_PlayerInventorySlot.js");
var Packet_RevengeMarkerRemove$TerrariaPacket = require("./packet/Packet_RevengeMarkerRemove.js");
var Packet_TeleportationPotion$TerrariaPacket = require("./packet/Packet_TeleportationPotion.js");
var Packetv1405_ConnectRequest$TerrariaPacket = require("./packet/v1405/Packetv1405_ConnectRequest.js");
var Packetv1405_ProjectileSync$TerrariaPacket = require("./packet/v1405/Packetv1405_ProjectileSync.js");
var Packetv1405_TileSquareSend$TerrariaPacket = require("./packet/v1405/Packetv1405_TileSquareSend.js");
var Packet_CrystalInvasionStart$TerrariaPacket = require("./packet/Packet_CrystalInvasionStart.js");
var Packet_MassWireOperationPay$TerrariaPacket = require("./packet/Packet_MassWireOperationPay.js");
var Packet_PlayerChestIndexSync$TerrariaPacket = require("./packet/Packet_PlayerChestIndexSync.js");
var Packet_PlayerTeleportPortal$TerrariaPacket = require("./packet/Packet_PlayerTeleportPortal.js");
var Packet_CavernMonsterTypeSync$TerrariaPacket = require("./packet/Packet_CavernMonsterTypeSync.js");
var Packet_ClientSyncedInventory$TerrariaPacket = require("./packet/Packet_ClientSyncedInventory.js");
var Packet_FoodPlatterTryPlacing$TerrariaPacket = require("./packet/Packet_FoodPlatterTryPlacing.js");
var Packet_NpcBuffRemovalRequest$TerrariaPacket = require("./packet/Packet_NpcBuffRemovalRequest.js");
var Packet_NpcKilledNotification$TerrariaPacket = require("./packet/Packet_NpcKilledNotification.js");
var Packet_ShieldStrengthsUpdate$TerrariaPacket = require("./packet/Packet_ShieldStrengthsUpdate.js");
var Packet_WeaponsRackTryPlacing$TerrariaPacket = require("./packet/Packet_WeaponsRackTryPlacing.js");
var Packet_CrystalInvasionWipeAll$TerrariaPacket = require("./packet/Packet_CrystalInvasionWipeAll.js");
var Packet_InvasionProgressReport$TerrariaPacket = require("./packet/Packet_InvasionProgressReport.js");
var Packet_ItemDropInstancedUpdate$TerrariaPacket = require("./packet/Packet_ItemDropInstancedUpdate.js");
var Packet_PlayerLuckFactorsUpdate$TerrariaPacket = require("./packet/Packet_PlayerLuckFactorsUpdate.js");
var Packet_MinionAttackTargetUpdate$TerrariaPacket = require("./packet/Packet_MinionAttackTargetUpdate.js");
var Packet_TemporaryAnimationCreate$TerrariaPacket = require("./packet/Packet_TemporaryAnimationCreate.js");
var Packet_ItemForceIntoNearestChest$TerrariaPacket = require("./packet/Packet_ItemForceIntoNearestChest.js");
var Packet_TileEntityHatRackItemSync$TerrariaPacket = require("./packet/Packet_TileEntityHatRackItemSync.js");
var Packet_CountsAsHostForGameplaySet$TerrariaPacket = require("./packet/Packet_CountsAsHostForGameplaySet.js");
var Packet_InitialTileSectionsRequest$TerrariaPacket = require("./packet/Packet_InitialTileSectionsRequest.js");
var Packet_AnglerQuestsCompletedAmount$TerrariaPacket = require("./packet/Packet_AnglerQuestsCompletedAmount.js");
var Packet_CrystalInvasionSendWaitTime$TerrariaPacket = require("./packet/Packet_CrystalInvasionSendWaitTime.js");
var Packet_TravellingMerchantInventory$TerrariaPacket = require("./packet/Packet_TravellingMerchantInventory.js");
var Packet_TileEntityInteractionRequest$TerrariaPacket = require("./packet/Packet_TileEntityInteractionRequest.js");
var Packet_TileEntityDisplayDollItemSync$TerrariaPacket = require("./packet/Packet_TileEntityDisplayDollItemSync.js");
var Packet_ClientFinishConnectingToServer$TerrariaPacket = require("./packet/Packet_ClientFinishConnectingToServer.js");

function parsePayload(packetType, payload, fromServer) {
  switch (packetType) {
    case /* ConnectRequest */0 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packetv1405_ConnectRequest$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* ConnectRequest */0,
                                _0: a
                              };
                      }));
        }
    case /* Disconnect */1 :
        if (fromServer) {
          return Belt_Option.map(Packet_Disconnect$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* Disconnect */1,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* PlayerSlotSet */2 :
        if (fromServer) {
          return Belt_Option.map(Packet_PlayerSlotSet$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* PlayerSlotSet */2,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* PlayerInfo */3 :
        return Belt_Option.map(Packet_PlayerInfo$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerInfo */3,
                              _0: a
                            };
                    }));
    case /* PlayerInventorySlot */4 :
        return Belt_Option.map(Packet_PlayerInventorySlot$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerInventorySlot */4,
                              _0: a
                            };
                    }));
    case /* WorldDataRequest */5 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_WorldDataRequest$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* WorldDataRequest */5,
                                _0: a
                              };
                      }));
        }
    case /* WorldInfo */6 :
        if (fromServer) {
          return Belt_Option.map(Packetv1405_WorldInfo$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* WorldInfo */6,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* InitialTileSectionsRequest */7 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_InitialTileSectionsRequest$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* InitialTileSectionsRequest */7,
                                _0: a
                              };
                      }));
        }
    case /* Status */8 :
        if (fromServer) {
          return Belt_Option.map(Packet_Status$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* Status */8,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* TileSectionSend */9 :
        if (fromServer) {
          return Belt_Option.map(Packet_TileSectionSend$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* TileSectionSend */9,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* TileSectionFrame */10 :
        if (fromServer) {
          return Belt_Option.map(Packet_TileSectionFrame$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* TileSectionFrame */10,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* PlayerSpawn */11 :
        return Belt_Option.map(Packet_PlayerSpawn$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerSpawn */11,
                              _0: a
                            };
                    }));
    case /* PlayerUpdate */12 :
        return Belt_Option.map(Packet_PlayerUpdate$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerUpdate */12,
                              _0: a
                            };
                    }));
    case /* PlayerActive */13 :
        if (fromServer) {
          return Belt_Option.map(Packet_PlayerActive$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* PlayerActive */13,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* PlayerHealth */14 :
        return Belt_Option.map(Packet_PlayerHealth$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerHealth */14,
                              _0: a
                            };
                    }));
    case /* TileModify */15 :
        return Belt_Option.map(Packet_TileModify$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* TileModify */15,
                              _0: a
                            };
                    }));
    case /* TimeSet */16 :
        if (fromServer) {
          return Belt_Option.map(Packet_TimeSet$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* TimeSet */16,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* DoorUse */17 :
        return Belt_Option.map(Packet_DoorUse$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* DoorUse */17,
                              _0: a
                            };
                    }));
    case /* TileSquareSend */18 :
        return Belt_Option.map(Packetv1405_TileSquareSend$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* TileSquareSend */18,
                              _0: a
                            };
                    }));
    case /* ItemDropUpdate */19 :
        return Belt_Option.map(Packet_ItemDropUpdate$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* ItemDropUpdate */19,
                              _0: a
                            };
                    }));
    case /* ItemOwner */20 :
        return Belt_Option.map(Packet_ItemOwner$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* ItemOwner */20,
                              _0: a
                            };
                    }));
    case /* NpcUpdate */21 :
        if (fromServer) {
          return Belt_Option.map(Packet_NpcUpdate$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* NpcUpdate */21,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* NpcItemStrike */22 :
        return Belt_Option.map(Packet_NpcItemStrike$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* NpcItemStrike */22,
                              _0: a
                            };
                    }));
    case /* ProjectileSync */23 :
        return Belt_Option.map(Packetv1405_ProjectileSync$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* ProjectileSync */23,
                              _0: a
                            };
                    }));
    case /* NpcStrike */24 :
        return Belt_Option.map(Packet_NpcStrike$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* NpcStrike */24,
                              _0: a
                            };
                    }));
    case /* ProjectileDestroy */25 :
        return Belt_Option.map(Packet_ProjectileDestroy$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* ProjectileDestroy */25,
                              _0: a
                            };
                    }));
    case /* PvpToggle */26 :
        return Belt_Option.map(Packet_PvpToggle$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PvpToggle */26,
                              _0: a
                            };
                    }));
    case /* ChestOpen */27 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_ChestOpen$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* ChestOpen */27,
                                _0: a
                              };
                      }));
        }
    case /* ChestItem */28 :
        return Belt_Option.map(Packet_ChestItem$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* ChestItem */28,
                              _0: a
                            };
                    }));
    case /* ActiveContainerSync */29 :
        return Belt_Option.map(Packet_ActiveContainerSync$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* ActiveContainerSync */29,
                              _0: a
                            };
                    }));
    case /* ChestPlace */30 :
        return Belt_Option.map(Packet_ChestPlace$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* ChestPlace */30,
                              _0: a
                            };
                    }));
    case /* HealEffect */31 :
        return Belt_Option.map(Packet_HealEffect$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* HealEffect */31,
                              _0: a
                            };
                    }));
    case /* Zones */32 :
        return Belt_Option.map(Packet_Zones$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* Zones */32,
                              _0: a
                            };
                    }));
    case /* PasswordRequired */33 :
        if (fromServer) {
          return Belt_Option.map(Packet_PasswordRequired$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* PasswordRequired */33,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* PasswordSend */34 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_PasswordSend$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* PasswordSend */34,
                                _0: a
                              };
                      }));
        }
    case /* ItemOwnerRemove */35 :
        if (fromServer) {
          return Belt_Option.map(Packet_ItemOwnerRemove$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* ItemOwnerRemove */35,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* NpcTalk */36 :
        return Belt_Option.map(Packet_NpcTalk$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* NpcTalk */36,
                              _0: a
                            };
                    }));
    case /* PlayerAnimation */37 :
        return Belt_Option.map(Packet_PlayerAnimation$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerAnimation */37,
                              _0: a
                            };
                    }));
    case /* PlayerMana */38 :
        return Belt_Option.map(Packet_PlayerMana$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerMana */38,
                              _0: a
                            };
                    }));
    case /* ManaEffect */39 :
        return Belt_Option.map(Packet_ManaEffect$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* ManaEffect */39,
                              _0: a
                            };
                    }));
    case /* PlayerTeam */40 :
        return Belt_Option.map(Packet_PlayerTeam$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerTeam */40,
                              _0: a
                            };
                    }));
    case /* SignRead */41 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_SignRead$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* SignRead */41,
                                _0: a
                              };
                      }));
        }
    case /* SignNew */42 :
        return Belt_Option.map(Packet_SignNew$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* SignNew */42,
                              _0: a
                            };
                    }));
    case /* LiquidSet */43 :
        return Belt_Option.map(Packet_LiquidSet$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* LiquidSet */43,
                              _0: a
                            };
                    }));
    case /* PlayerSpawnSelf */44 :
        if (fromServer) {
          return Belt_Option.map(Packet_PlayerSpawnSelf$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* PlayerSpawnSelf */44,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* PlayerBuffsSet */45 :
        return Belt_Option.map(Packet_PlayerBuffsSet$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerBuffsSet */45,
                              _0: a
                            };
                    }));
    case /* NpcSpecialEffect */46 :
        return Belt_Option.map(Packet_NpcSpecialEffect$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* NpcSpecialEffect */46,
                              _0: a
                            };
                    }));
    case /* ChestUnlock */47 :
        return Belt_Option.map(Packet_ChestUnlock$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* ChestUnlock */47,
                              _0: a
                            };
                    }));
    case /* NpcBuffAdd */48 :
        return Belt_Option.map(Packet_NpcBuffAdd$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* NpcBuffAdd */48,
                              _0: a
                            };
                    }));
    case /* NpcBuffUpdate */49 :
        if (fromServer) {
          return Belt_Option.map(Packet_NpcBuffUpdate$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* NpcBuffUpdate */49,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* PlayerBuffAdd */50 :
        return Belt_Option.map(Packet_PlayerBuffAdd$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerBuffAdd */50,
                              _0: a
                            };
                    }));
    case /* NpcNameUpdate */51 :
        return Belt_Option.map(Packet_NpcNameUpdate$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* NpcNameUpdate */51,
                              _0: a
                            };
                    }));
    case /* GoodEvilUpdate */52 :
        if (fromServer) {
          return Belt_Option.map(Packet_GoodEvilUpdate$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* GoodEvilUpdate */52,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* HarpPlay */53 :
        return Belt_Option.map(Packet_HarpPlay$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* HarpPlay */53,
                              _0: a
                            };
                    }));
    case /* SwitchHit */54 :
        return Belt_Option.map(Packet_SwitchHit$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* SwitchHit */54,
                              _0: a
                            };
                    }));
    case /* NpcHomeUpdate */55 :
        return Belt_Option.map(Packet_NpcHomeUpdate$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* NpcHomeUpdate */55,
                              _0: a
                            };
                    }));
    case /* BossOrInvasionSpawn */56 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_BossOrInvasionSpawn$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* BossOrInvasionSpawn */56,
                                _0: a
                              };
                      }));
        }
    case /* PlayerDodge */57 :
        return Belt_Option.map(Packet_PlayerDodge$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerDodge */57,
                              _0: a
                            };
                    }));
    case /* PaintTile */58 :
        return Belt_Option.map(Packet_PaintTile$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PaintTile */58,
                              _0: a
                            };
                    }));
    case /* PaintWall */59 :
        return Belt_Option.map(Packet_PaintWall$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PaintWall */59,
                              _0: a
                            };
                    }));
    case /* Teleport */60 :
        return Belt_Option.map(Packet_Teleport$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* Teleport */60,
                              _0: a
                            };
                    }));
    case /* PlayerHealOther */61 :
        return Belt_Option.map(Packet_PlayerHealOther$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerHealOther */61,
                              _0: a
                            };
                    }));
    case /* DimensionsUpdate */62 :
        return Belt_Option.map(Packet_DimensionsUpdate$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* DimensionsUpdate */62,
                              _0: a
                            };
                    }));
    case /* ClientUuid */63 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_ClientUuid$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* ClientUuid */63,
                                _0: a
                              };
                      }));
        }
    case /* ChestName */64 :
        return Belt_Option.map(Packet_ChestName$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* ChestName */64,
                              _0: a
                            };
                    }));
    case /* CatchNpc */65 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_CatchNpc$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* CatchNpc */65,
                                _0: a
                              };
                      }));
        }
    case /* ReleaseNpc */66 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_ReleaseNpc$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* ReleaseNpc */66,
                                _0: a
                              };
                      }));
        }
    case /* TravellingMerchantInventory */67 :
        if (fromServer) {
          return Belt_Option.map(Packet_TravellingMerchantInventory$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* TravellingMerchantInventory */67,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* TeleportationPotion */68 :
        return Belt_Option.map(Packet_TeleportationPotion$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* TeleportationPotion */68,
                              _0: a
                            };
                    }));
    case /* AnglerQuest */69 :
        if (fromServer) {
          return Belt_Option.map(Packet_AnglerQuest$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* AnglerQuest */69,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* AnglerQuestComplete */70 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_AnglerQuestComplete$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* AnglerQuestComplete */70,
                                _0: a
                              };
                      }));
        }
    case /* AnglerQuestsCompletedAmount */71 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_AnglerQuestsCompletedAmount$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* AnglerQuestsCompletedAmount */71,
                                _0: a
                              };
                      }));
        }
    case /* TemporaryAnimationCreate */72 :
        if (fromServer) {
          return Belt_Option.map(Packet_TemporaryAnimationCreate$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* TemporaryAnimationCreate */72,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* InvasionProgressReport */73 :
        if (fromServer) {
          return Belt_Option.map(Packet_InvasionProgressReport$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* InvasionProgressReport */73,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* ObjectPlace */74 :
        return Belt_Option.map(Packet_ObjectPlace$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* ObjectPlace */74,
                              _0: a
                            };
                    }));
    case /* PlayerChestIndexSync */75 :
        if (fromServer) {
          return Belt_Option.map(Packet_PlayerChestIndexSync$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* PlayerChestIndexSync */75,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* CombatNumberCreate */76 :
        if (fromServer) {
          return Belt_Option.map(Packet_CombatNumberCreate$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* CombatNumberCreate */76,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* NetModuleLoad */77 :
        return Belt_Option.map(Packet_NetModuleLoad$TerrariaPacket.parse(payload, fromServer), (function (a) {
                      return {
                              TAG: /* NetModuleLoad */77,
                              _0: a
                            };
                    }));
    case /* NpcKillCount */78 :
        if (fromServer) {
          return Belt_Option.map(Packet_NpcKillCount$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* NpcKillCount */78,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* PlayerStealth */79 :
        return Belt_Option.map(Packet_PlayerStealth$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerStealth */79,
                              _0: a
                            };
                    }));
    case /* ItemForceIntoNearestChest */80 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_ItemForceIntoNearestChest$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* ItemForceIntoNearestChest */80,
                                _0: a
                              };
                      }));
        }
    case /* TileEntityUpdate */81 :
        if (fromServer) {
          return Belt_Option.map(Packet_TileEntityUpdate$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* TileEntityUpdate */81,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* TileEntityPlace */82 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_TileEntityPlace$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* TileEntityPlace */82,
                                _0: a
                              };
                      }));
        }
    case /* ItemDropModify */83 :
        if (fromServer) {
          return Belt_Option.map(Packet_ItemDropModify$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* ItemDropModify */83,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* ItemFramePlace */84 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_ItemFramePlace$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* ItemFramePlace */84,
                                _0: a
                              };
                      }));
        }
    case /* ItemDropInstancedUpdate */85 :
        return Belt_Option.map(Packet_ItemDropInstancedUpdate$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* ItemDropInstancedUpdate */85,
                              _0: a
                            };
                    }));
    case /* EmoteBubble */86 :
        if (fromServer) {
          return Belt_Option.map(Packet_EmoteBubble$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* EmoteBubble */86,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* ExtraValueSync */87 :
        return Belt_Option.map(Packet_ExtraValueSync$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* ExtraValueSync */87,
                              _0: a
                            };
                    }));
    case /* SocialHandshake */88 :
        return Belt_Option.map(Packet_SocialHandshake$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* SocialHandshake */88,
                              _0: a
                            };
                    }));
    case /* Unused */89 :
        return Belt_Option.map(Packet_Unused$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* Unused */89,
                              _0: a
                            };
                    }));
    case /* PortalKill */90 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_PortalKill$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* PortalKill */90,
                                _0: a
                              };
                      }));
        }
    case /* PlayerTeleportPortal */91 :
        return Belt_Option.map(Packet_PlayerTeleportPortal$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerTeleportPortal */91,
                              _0: a
                            };
                    }));
    case /* NpcKilledNotification */92 :
        if (fromServer) {
          return Belt_Option.map(Packet_NpcKilledNotification$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* NpcKilledNotification */92,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* EventNotification */93 :
        if (fromServer) {
          return Belt_Option.map(Packet_EventNotification$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* EventNotification */93,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* MinionTargetUpdate */94 :
        return Belt_Option.map(Packet_MinionTargetUpdate$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* MinionTargetUpdate */94,
                              _0: a
                            };
                    }));
    case /* NpcTeleportPortal */95 :
        return Belt_Option.map(Packet_NpcTeleportPortal$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* NpcTeleportPortal */95,
                              _0: a
                            };
                    }));
    case /* ShieldStrengthsUpdate */96 :
        if (fromServer) {
          return Belt_Option.map(Packet_ShieldStrengthsUpdate$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* ShieldStrengthsUpdate */96,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* NebulaLevelUp */97 :
        return Belt_Option.map(Packet_NebulaLevelUp$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* NebulaLevelUp */97,
                              _0: a
                            };
                    }));
    case /* MoonLordCountdown */98 :
        if (fromServer) {
          return Belt_Option.map(Packet_MoonLordCountdown$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* MoonLordCountdown */98,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* NpcShopItem */99 :
        if (fromServer) {
          return Belt_Option.map(Packet_NpcShopItem$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* NpcShopItem */99,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* GemLockToggle */100 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_GemLockToggle$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* GemLockToggle */100,
                                _0: a
                              };
                      }));
        }
    case /* SmokePoof */101 :
        if (fromServer) {
          return Belt_Option.map(Packet_SmokePoof$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* SmokePoof */101,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* ChatMessageSmart */102 :
        if (fromServer) {
          return Belt_Option.map(Packet_ChatMessageSmart$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* ChatMessageSmart */102,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* WiredCannonShot */103 :
        if (fromServer) {
          return Belt_Option.map(Packet_WiredCannonShot$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* WiredCannonShot */103,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* MassWireOperation */104 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_MassWireOperation$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* MassWireOperation */104,
                                _0: a
                              };
                      }));
        }
    case /* MassWireOperationPay */105 :
        if (fromServer) {
          return Belt_Option.map(Packet_MassWireOperationPay$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* MassWireOperationPay */105,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* PartyToggle */106 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_PartyToggle$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* PartyToggle */106,
                                _0: a
                              };
                      }));
        }
    case /* TreeGrowFx */107 :
        return Belt_Option.map(Packet_TreeGrowFx$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* TreeGrowFx */107,
                              _0: a
                            };
                    }));
    case /* CrystalInvasionStart */108 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_CrystalInvasionStart$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* CrystalInvasionStart */108,
                                _0: a
                              };
                      }));
        }
    case /* CrystalInvasionWipeAll */109 :
        if (fromServer) {
          return Belt_Option.map(Packet_CrystalInvasionWipeAll$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* CrystalInvasionWipeAll */109,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* MinionAttackTargetUpdate */110 :
        return Belt_Option.map(Packet_MinionAttackTargetUpdate$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* MinionAttackTargetUpdate */110,
                              _0: a
                            };
                    }));
    case /* CrystalInvasionSendWaitTime */111 :
        if (fromServer) {
          return Belt_Option.map(Packet_CrystalInvasionSendWaitTime$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* CrystalInvasionSendWaitTime */111,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* PlayerDamage */112 :
        return Belt_Option.map(Packet_PlayerDamage$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerDamage */112,
                              _0: a
                            };
                    }));
    case /* PlayerDeath */113 :
        return Belt_Option.map(Packet_PlayerDeath$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerDeath */113,
                              _0: a
                            };
                    }));
    case /* CombatTextCreate */114 :
        if (fromServer) {
          return Belt_Option.map(Packet_CombatTextCreate$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* CombatTextCreate */114,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* Emoji */115 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_Emoji$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* Emoji */115,
                                _0: a
                              };
                      }));
        }
    case /* TileEntityDisplayDollItemSync */116 :
        return Belt_Option.map(Packet_TileEntityDisplayDollItemSync$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* TileEntityDisplayDollItemSync */116,
                              _0: a
                            };
                    }));
    case /* TileEntityInteractionRequest */117 :
        return Belt_Option.map(Packet_TileEntityInteractionRequest$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* TileEntityInteractionRequest */117,
                              _0: a
                            };
                    }));
    case /* WeaponsRackTryPlacing */118 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_WeaponsRackTryPlacing$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* WeaponsRackTryPlacing */118,
                                _0: a
                              };
                      }));
        }
    case /* TileEntityHatRackItemSync */119 :
        return Belt_Option.map(Packet_TileEntityHatRackItemSync$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* TileEntityHatRackItemSync */119,
                              _0: a
                            };
                    }));
    case /* TilePickingSync */120 :
        return Belt_Option.map(Packet_TilePickingSync$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* TilePickingSync */120,
                              _0: a
                            };
                    }));
    case /* RevengeMarkerSync */121 :
        if (fromServer) {
          return Belt_Option.map(Packet_RevengeMarkerSync$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* RevengeMarkerSync */121,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* RevengeMarkerRemove */122 :
        if (fromServer) {
          return Belt_Option.map(Packet_RevengeMarkerRemove$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* RevengeMarkerRemove */122,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* GolfBallLandInCup */123 :
        return Belt_Option.map(Packet_GolfBallLandInCup$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* GolfBallLandInCup */123,
                              _0: a
                            };
                    }));
    case /* ClientFinishConnectingToServer */124 :
        if (fromServer) {
          return Belt_Option.map(Packet_ClientFinishConnectingToServer$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* ClientFinishConnectingToServer */124,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* NpcFishOut */125 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_NpcFishOut$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* NpcFishOut */125,
                                _0: a
                              };
                      }));
        }
    case /* NpcTamper */126 :
        if (fromServer) {
          return Belt_Option.map(Packet_NpcTamper$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* NpcTamper */126,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* LegacySoundPlay */127 :
        if (fromServer) {
          return Belt_Option.map(Packet_LegacySoundPlay$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* LegacySoundPlay */127,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* FoodPlatterTryPlacing */128 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_FoodPlatterTryPlacing$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* FoodPlatterTryPlacing */128,
                                _0: a
                              };
                      }));
        }
    case /* PlayerLuckFactorsUpdate */129 :
        return Belt_Option.map(Packet_PlayerLuckFactorsUpdate$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* PlayerLuckFactorsUpdate */129,
                              _0: a
                            };
                    }));
    case /* PlayerDead */130 :
        if (fromServer) {
          return Belt_Option.map(Packet_PlayerDead$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* PlayerDead */130,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    case /* CavernMonsterTypeSync */131 :
        return Belt_Option.map(Packet_CavernMonsterTypeSync$TerrariaPacket.parse(payload), (function (a) {
                      return {
                              TAG: /* CavernMonsterTypeSync */131,
                              _0: a
                            };
                    }));
    case /* NpcBuffRemovalRequest */132 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_NpcBuffRemovalRequest$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* NpcBuffRemovalRequest */132,
                                _0: a
                              };
                      }));
        }
    case /* ClientSyncedInventory */133 :
        if (fromServer) {
          return ;
        } else {
          return Belt_Option.map(Packet_ClientSyncedInventory$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* ClientSyncedInventory */133,
                                _0: a
                              };
                      }));
        }
    case /* CountsAsHostForGameplaySet */134 :
        if (fromServer) {
          return Belt_Option.map(Packet_CountsAsHostForGameplaySet$TerrariaPacket.parse(payload), (function (a) {
                        return {
                                TAG: /* CountsAsHostForGameplaySet */134,
                                _0: a
                              };
                      }));
        } else {
          return ;
        }
    
  }
}

function simpleParse(buffer, fromServer) {
  var match = buffer.length;
  if (!(match > 2 || match < 0)) {
    return ;
  }
  var packetType = PacketType$TerrariaPacket.fromInt(buffer[2]);
  if (packetType === undefined) {
    return ;
  }
  try {
    return parsePayload(packetType, buffer, fromServer);
  }
  catch (e){
    return ;
  }
}

function parse(buffer, fromServer) {
  return Belt_Option.map(simpleParse(buffer, fromServer), (function (packet) {
                return {
                        TAG: /* SerializeNotNecessary */1,
                        _0: packet,
                        _1: buffer
                      };
              }));
}

function parseAsLatest(buffer, fromServer) {
  return Belt_Option.map(simpleParse(buffer, fromServer), (function (packet) {
                var packet$1 = Packetv1405$TerrariaPacket.toLatest(packet, fromServer);
                if (packet$1.TAG === /* Same */0) {
                  return {
                          TAG: /* SerializeNotNecessary */1,
                          _0: packet$1._0,
                          _1: buffer
                        };
                } else {
                  return {
                          TAG: /* ShouldSerialize */0,
                          _0: packet$1._0
                        };
                }
              }));
}

exports.parsePayload = parsePayload;
exports.simpleParse = simpleParse;
exports.parse = parse;
exports.parseAsLatest = parseAsLatest;
/* Packetv1405-TerrariaPacket Not a pure module */
