// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Option = require("rescript/lib/js/belt_Option.js");
var BitFlags$TerrariaPacket = require("./BitFlags.bs.js");

function otherFromByte($$byte) {
  switch ($$byte) {
    case 0 :
        return "FallDamage";
    case 1 :
        return "Drowning";
    case 2 :
        return "Lava";
    case 3 :
        return "FallDamage2";
    case 4 :
        return "DemonAltar";
    case 5 :
        return "CompanionCube";
    case 6 :
        return "Suffocation";
    case 7 :
        return "Burning";
    case 8 :
        return "Poison";
    case 9 :
        return "Electrified";
    case 10 :
        return "WallOfFleshEscape";
    case 11 :
        return "WallOfFleshLicked";
    case 12 :
        return "ChaosState";
    case 13 :
        return "ChaosState2Male";
    case 14 :
        return "ChaosState3Female";
    default:
      return ;
  }
}

function otherToByte(other) {
  switch (other) {
    case "FallDamage" :
        return 0;
    case "Drowning" :
        return 1;
    case "Lava" :
        return 2;
    case "FallDamage2" :
        return 3;
    case "DemonAltar" :
        return 4;
    case "CompanionCube" :
        return 5;
    case "Suffocation" :
        return 6;
    case "Burning" :
        return 7;
    case "Poison" :
        return 8;
    case "Electrified" :
        return 9;
    case "WallOfFleshEscape" :
        return 10;
    case "WallOfFleshLicked" :
        return 11;
    case "ChaosState" :
        return 12;
    case "ChaosState2Male" :
        return 13;
    case "ChaosState3Female" :
        return 14;
    
  }
}

function readDeathReason(reader) {
  var reasonType = BitFlags$TerrariaPacket.fromByte(reader.readByte());
  var killerPlayerId = BitFlags$TerrariaPacket.flag1(reasonType) ? reader.readInt16() : undefined;
  var killerNpcId = BitFlags$TerrariaPacket.flag2(reasonType) ? reader.readInt16() : undefined;
  var killerProjectileId = BitFlags$TerrariaPacket.flag3(reasonType) ? reader.readInt16() : undefined;
  var typeOfDeathOther = BitFlags$TerrariaPacket.flag4(reasonType) ? otherFromByte(reader.readByte()) : undefined;
  var projectileType = BitFlags$TerrariaPacket.flag5(reasonType) ? reader.readInt16() : undefined;
  var itemType = BitFlags$TerrariaPacket.flag6(reasonType) ? reader.readInt16() : undefined;
  var itemPrefix = BitFlags$TerrariaPacket.flag7(reasonType) ? reader.readByte() : undefined;
  var deathReason = BitFlags$TerrariaPacket.flag8(reasonType) ? reader.readString() : undefined;
  return {
          killerPlayerId: killerPlayerId,
          killerNpcId: killerNpcId,
          killerProjectileId: killerProjectileId,
          typeOfDeathOther: typeOfDeathOther,
          projectileType: projectileType,
          itemType: itemType,
          itemPrefix: itemPrefix,
          deathReason: deathReason
        };
}

function packFlags(writer, self) {
  var flags = BitFlags$TerrariaPacket.fromFlags(Belt_Option.isSome(self.killerPlayerId), Belt_Option.isSome(self.killerNpcId), Belt_Option.isSome(self.killerProjectileId), Belt_Option.isSome(self.typeOfDeathOther), Belt_Option.isSome(self.projectileType), Belt_Option.isSome(self.itemType), Belt_Option.isSome(self.itemPrefix), Belt_Option.isSome(self.deathReason));
  return writer.packByte(BitFlags$TerrariaPacket.toByte(flags));
}

function packKillerPlayerId(writer, self) {
  var killerPlayerId = self.killerPlayerId;
  if (killerPlayerId !== undefined) {
    return writer.packInt16(killerPlayerId);
  } else {
    return writer;
  }
}

function packKillerNpcId(writer, self) {
  var killerNpcId = self.killerNpcId;
  if (killerNpcId !== undefined) {
    return writer.packInt16(killerNpcId);
  } else {
    return writer;
  }
}

function packKillerProjectileId(writer, self) {
  var killerProjectileId = self.killerProjectileId;
  if (killerProjectileId !== undefined) {
    return writer.packInt16(killerProjectileId);
  } else {
    return writer;
  }
}

function packTypeOfDeathOther(writer, self) {
  var typeOfDeathOther = self.typeOfDeathOther;
  if (typeOfDeathOther !== undefined) {
    return writer.packByte(otherToByte(typeOfDeathOther));
  } else {
    return writer;
  }
}

function packProjectileType(writer, self) {
  var projectileType = self.projectileType;
  if (projectileType !== undefined) {
    return writer.packInt16(projectileType);
  } else {
    return writer;
  }
}

function packItemType(writer, self) {
  var itemType = self.itemType;
  if (itemType !== undefined) {
    return writer.packInt16(itemType);
  } else {
    return writer;
  }
}

function packItemPrefix(writer, self) {
  var itemPrefix = self.itemPrefix;
  if (itemPrefix !== undefined) {
    return writer.packByte(itemPrefix);
  } else {
    return writer;
  }
}

function pack(writer, self) {
  var writer$1 = packItemPrefix(packItemType(packProjectileType(packTypeOfDeathOther(packKillerProjectileId(packKillerNpcId(packKillerPlayerId(packFlags(writer, self), self), self), self), self), self), self), self);
  var deathReason = self.deathReason;
  if (deathReason !== undefined) {
    return writer$1.packString(deathReason);
  } else {
    return writer$1;
  }
}

var packDeathReason = pack;

exports.readDeathReason = readDeathReason;
exports.packDeathReason = packDeathReason;
/* No side effect */
